--- gv-3.6.1/src/Makefile.am~	2004-11-19 20:29:47.000000000 +0000
+++ gv-3.6.1/src/Makefile.am	2004-11-23 02:22:37.738983048 +0000
@@ -118,8 +118,8 @@
 	@echo "!########## gv_intern_res.dat (generated by makefile)" >> $(srcdir)/gv_intern_res_unix.dat
 	@echo ""							>> $(srcdir)/gv_intern_res_unix.dat
 	@echo "GV.gsInterpreter:	gs" >> $(srcdir)/gv_intern_res_unix.dat
-	@echo "GV.gsCmdScanPDF:	gs -dNODISPLAY -dQUIET -sPDFname='%s' -sDSCname='%s' pdf2dsc.ps -c quit" >> $(srcdir)/gv_intern_res_unix.dat
-	@echo "GV.gsCmdConvPDF:	gs -dNOPAUSE -dQUIET -dBATCH -sDEVICE=pswrite -sOutputFile='%s' -f '%s' -c save pop quit" >> $(srcdir)/gv_intern_res_unix.dat
+	@echo "GV.gsCmdScanPDF: pdf2dsc %pdf %dsc" >> $(srcdir)/gv_intern_res_unix.dat
+	@echo "GV.gsCmdConvPDF: pdf2ps $(PS_LEVEL) %pdf %ps" >> $(srcdir)/gv_intern_res_unix.dat
 	@echo "GV.gsX11Device:		-sDEVICE=x11" >> $(srcdir)/gv_intern_res_unix.dat
 	@echo "GV.gsX11AlphaDevice:	-dNOPLATFONTS -sDEVICE=x11alpha" >> $(srcdir)/gv_intern_res_unix.dat
 	@echo "GV.gsSafer:		True" >> $(srcdir)/gv_intern_res_unix.dat
--- gv-3.6.1/src/ps.c.orig	2004-12-08 00:55:59.000000000 +0100
+++ gv-3.6.1/src/ps.c	2005-01-09 21:36:48.824173184 +0100
@@ -453,15 +453,20 @@
       struct document *retval = NULL;
       FILE *tmpfile = (FILE*)NULL;
       char *filename_unc;
+      char *quoted_filename, *quoted_filename_unc;
       char cmd[512];
       char s[512];
       mode_t old_umask;
       filename_unc=file_getTmpFilename(NULL,filename_raw);
+      quoted_filename = quote_filename(filename);
+      quoted_filename_unc = quote_filename(filename_unc);
       if (memcmp(b, "BZh", 3) == 0) {
-        sprintf(cmd, "bzip2 -dc %s >%s", filename, filename_unc);
+        sprintf(cmd, "bzip2 -dc %s >%s", quoted_filename, quoted_filename_unc);
       } else {
-        sprintf(cmd, "gzip -dc %s >%s", filename, filename_unc);
+        sprintf(cmd, "gzip -dc %s >%s", quoted_filename, quoted_filename_unc);
       }
+      GV_XtFree(quoted_filename);
+      GV_XtFree(quoted_filename_unc);
 
       old_umask = umask(0077);
 
@@ -538,11 +543,36 @@
       struct document *retval = NULL;
       FILE *tmpfile = (FILE*)NULL;
       char *filename_dsc;
+      char *quoted_filename, *quoted_filename_dsc;
+      char *pdfpos;
+      char *dscpos;
       char cmd[512];
       char s[512];
       mode_t old_umask;
       filename_dsc=file_getTmpFilename(NULL,filename_raw);
-      sprintf(cmd,cmd_scan_pdf,filename,filename_dsc);
+      quoted_filename = quote_filename(filename);
+      quoted_filename_dsc = quote_filename(filename_dsc);
+      if ((pdfpos = strstr(cmd_scan_pdf,"%pdf")) &&
+	  (dscpos = strstr(cmd_scan_pdf,"%dsc"))) {
+	cmd[0] = '\0';
+	if (pdfpos < dscpos) {
+	  strncat(cmd,cmd_scan_pdf,(pdfpos-cmd_scan_pdf));
+	  strcat(cmd,quoted_filename);
+	  strncat(cmd,pdfpos+4,(dscpos-pdfpos-4));
+	  strcat(cmd,quoted_filename_dsc);
+	  strcat(cmd,dscpos+4);
+	} else {
+	  strncat(cmd,cmd_scan_pdf,(dscpos-cmd_scan_pdf));
+	  strcat(cmd,quoted_filename_dsc);
+	  strncat(cmd,dscpos+4,(pdfpos-dscpos-4));
+	  strcat(cmd,quoted_filename);
+	  strcat(cmd,pdfpos+4);
+	}
+      } else {
+	sprintf(cmd,cmd_scan_pdf,quoted_filename,quoted_filename_dsc);
+      }
+      GV_XtFree(quoted_filename);
+      GV_XtFree(quoted_filename_dsc);
       old_umask = umask(0077);
       INFMESSAGE(is PDF)
       INFSMESSAGE(scan command,cmd)
--- gv-3.5.8.orig/src/misc.c
+++ gv-3.5.8/src/misc.c
@@ -1154,7 +1154,7 @@
     misc_setSensitive(w_printAllPages     , show_printAllPages     , (gv_psfile   != NULL));
     misc_setSensitive(w_checkFile         , show_checkFile         , (gv_filename != NULL));
     misc_setSensitive(w_updateFile        , show_updateFile        , (gv_filename != NULL));
-    misc_setSensitive(w_showThisPage      , show_showThisPage      , (gv_filename != NULL));
+    misc_setSensitive(w_showThisPage      , show_showThisPage      , (gv_psfile   != NULL));
     misc_setSensitive(w_prevPage          , show_prevPage          , (toc_text    != NULL));
     misc_setSensitive(w_nextPage          , show_nextPage          , (gv_filename != NULL));
     misc_setSensitive(w_toggleCurrentPage , show_toggleCurrentPage , (toc_text    != NULL));
@@ -1168,7 +1168,7 @@
     XtSetSensitive(saveAllEntry,     (gv_psfile   != NULL));
     XtSetSensitive(saveMarkedEntry,  (toc_text    != NULL));
     XtSetSensitive(nextEntry,        (gv_filename != NULL));
-    XtSetSensitive(redisplayEntry,   (gv_filename != NULL));
+    XtSetSensitive(redisplayEntry,   (gv_psfile   != NULL));
     XtSetSensitive(prevEntry,        (toc_text    != NULL));
     XtSetSensitive(currentEntry,     (toc_text    != NULL));
     XtSetSensitive(oddEntry,         (toc_text    != NULL));
@@ -1717,4 +1717,52 @@
     XtDestroyWidget(toplevel);
     ENDMESSAGE(catch_Xerror)
     return 0;
+}
+
+/*############################################################*/
+/* quote_filename */
+/* Quotes special characters in filenames */
+/* (taken from bash sources) */
+/*############################################################*/
+
+char *
+quote_filename (string) 
+     char *string;
+{
+    int c;
+    char *result, *r, *s;
+
+    BEGINMESSAGE(quote_filename)
+
+    result = (char*) GV_XtMalloc((2 * strlen (string) + 1) * sizeof(char));
+
+    for (r = result, s = string; s && (c = *s); s++)
+    {
+      switch (c)
+	{
+	case ' ': case '\t': case '\n':		/* IFS white space */
+	case '\'': case '"': case '\\':		/* quoting chars */
+	case '|': case '&': case ';':		/* shell metacharacters */
+	case '(': case ')': case '<': case '>':
+	case '!': case '{': case '}':		/* reserved words */
+	case '*': case '[': case '?': case ']':	/* globbing chars */
+	case '^':
+	case '$': case '`':			/* expansion chars */
+	  *r++ = '\\';
+	  *r++ = c;
+	  break;
+	case '#':				/* comment char */
+	  if (s == string)
+	    *r++ = '\\';
+	  /* FALLTHROUGH */
+	default:
+	  *r++ = c;
+	  break;
+	}
+    }
+    *r = '\0';
+
+    ENDMESSAGE(quote_filename)
+
+    return (result);
 }
--- gv-3.5.8.orig/src/callbacks.c
+++ gv-3.5.8/src/callbacks.c
@@ -870,7 +870,7 @@
   char *s;
 
   BEGINMESSAGE(cb_page)
-  if (gv_psfile && client_data) {
+  if (gv_filename && client_data) {
     s = (char*)client_data;
     if (*s=='-' || *s=='+') {  
       k = 1;
--- gv-3.5.8.orig/src/misc.h
+++ gv-3.5.8/src/misc.h
@@ -115,6 +115,12 @@
 #endif
 );
  
+extern char *                   quote_filename (
+#if NeedFunctionPrototypes
+    char*
+#endif
+);
+
 #endif	/* _GV_MISC_H_ */
 
 
--- gv-3.5.8.orig/src/file.c
+++ gv-3.5.8/src/file.c
@@ -145,6 +145,25 @@
 }
 
 /*############################################################*/
+/* file_assureDirectory */
+/*############################################################*/
+
+void
+file_assureDirectory(to,from)
+   char *to;
+   char *from;
+{
+   int len;
+   BEGINMESSAGE(file_assureDirectory)
+   strcpy(to,from);
+#  ifndef VMS
+      len = strlen(to);
+      if ((len > 0) && (to[len-1] != '/')) { to[len] = '/'; to[len+1] = '\0'; }
+#  endif
+   ENDMESSAGE(file_assureDirectory)
+}
+
+/*############################################################*/
 /* file_getTmpFilename */
 /* provide some temporary file name */
 /*############################################################*/
@@ -164,11 +183,13 @@
 
    BEGINMESSAGE(file_getTmpFilename)
 
-   if (!baseDirectory) baseDirectory = app_res.scratch_dir;
-   strcpy(tmpDirBuf,baseDirectory);
-   pos = file_locateFilename(tmpDirBuf);
-   if (pos) { ++pos; *pos='\0'; }
-   else strcpy(tmpDirBuf,app_res.scratch_dir);
+   pos = NULL;
+   if (baseDirectory) {
+     strcpy(tmpDirBuf,baseDirectory); 
+     pos = file_locateFilename(tmpDirBuf);
+   }
+   if (pos) *pos='\0';
+   else file_assureDirectory(tmpDirBuf,app_res.scratch_dir);
 
    if (!baseFilename) baseFilename= ".";
    strcpy(tmpNameBuf,baseFilename);
--- gv-3.5.8.orig/src/save.c
+++ gv-3.5.8/src/save.c
@@ -112,17 +112,19 @@
    String print_filename;
 {
    String error=NULL;
+   char *print_quoted_filename;
    char *c,*p;
    Cardinal m,n;
    String printfail=GV_ERROR_PRINT_FAIL;
 
    BEGINMESSAGE(print_file)
 
+   print_quoted_filename = quote_filename(print_filename);
    p = GV_XtNewString(print_command);
    n=0;
    c=p;
    while ((c=strstr(c,"%s"))) { c+=2; n++; }
-   m = (strlen(p)+(n>0?n:1)*strlen(print_filename)+5)*sizeof(char);
+   m = (strlen(p)+(n>0?n:1)*strlen(print_quoted_filename)+5)*sizeof(char);
    c = (char*) GV_XtMalloc(m);
    if (n>0) {
      char *e,*s;
@@ -133,13 +135,13 @@
        if (s) *s='\0';
        strcat(c,e);
        if (s) {
-	 strcat(c,print_filename);
+	 strcat(c,print_quoted_filename);
          e=s+2;
        } 
        else s=NULL;
      }
    } else {
-     sprintf(c, "%s %s",p,print_filename);
+     sprintf(c, "%s %s",p,print_quoted_filename);
    }
    INFSMESSAGE(printing:,c)
    if (SYSTEM_FAILED_ON(c)) {
@@ -149,6 +151,7 @@
    }
    GV_XtFree(c);
    GV_XtFree(p);
+   GV_XtFree(print_quoted_filename);
    ENDMESSAGE(print_file)
    return(error);
 }
@@ -198,6 +201,9 @@
    char proc_name[256];
    char *error=NULL;
    char *pos;
+   char *pdfpos;
+   char *pspos;
+   char *quoted_source_fn, *quoted_conv_fn;
 
    BEGINMESSAGE(save_forkPDFToPSConversion)
 
@@ -205,7 +211,30 @@
    strcpy(proc_name,pos);
    strcat(proc_name," conversion");
 
-   sprintf(command,gv_gs_cmd_conv_pdf,sd->conv_fn,sd->src_fn);
+   quoted_source_fn = quote_filename(sd->src_fn);
+   quoted_conv_fn = quote_filename(sd->conv_fn);
+   if ((pdfpos = strstr(gv_gs_cmd_conv_pdf,"%pdf")) &&
+       (pspos = strstr(gv_gs_cmd_conv_pdf,"%ps"))) {
+     command[0] = '\0';
+     if (pdfpos < pspos) {
+       strncat(command,gv_gs_cmd_conv_pdf,(pdfpos-gv_gs_cmd_conv_pdf));
+       strcat(command,quoted_source_fn);
+       strncat(command,pdfpos+4,(pspos-pdfpos-4));
+       strcat(command,quoted_conv_fn);
+       strcat(command,pspos+3);
+     } else {
+       strncat(command,gv_gs_cmd_conv_pdf,(pspos-gv_gs_cmd_conv_pdf));
+       strcat(command,quoted_conv_fn);
+       strncat(command,pspos+3,(pdfpos-pspos-3));
+       strcat(command,quoted_source_fn);
+       strcat(command,pdfpos+4);
+     }
+   } else {
+     sprintf(command,gv_gs_cmd_conv_pdf,quoted_conv_fn,quoted_source_fn);
+   }
+   GV_XtFree(quoted_source_fn);
+   GV_XtFree(quoted_conv_fn);
+
    INFSMESSAGE(starting conversion:,command)
    process_fork(proc_name,command,save_forkPDFToPSConversionDone,(XtPointer)sd);
    ENDMESSAGE(save_forkPDFToPSConversion)
--- gv-3.5.8.orig/src/miscmenu.c
+++ gv-3.5.8/src/miscmenu.c
@@ -60,7 +60,7 @@
 
 static MiscMenuEntryStruct miscmenu_entries[] = {
   { "update",cb_checkFile,(XtPointer)CHECK_FILE_DATE,2 },
-  { "redisplay",cb_redisplay,NULL,2 },
+  { "redisplay",cb_redisplay,NULL,3 },
   { "toggle_current" , cb_setPageMark, (XtPointer)(SPM_CURRENT|SPM_TOGGLE),1 },
   { "toggle_even"    , cb_setPageMark, (XtPointer)(SPM_EVEN|SPM_TOGGLE),1 },
   { "toggle_odd"     , cb_setPageMark, (XtPointer)(SPM_ODD|SPM_TOGGLE),1 },
--- gv-3.5.8.orig/src/options_fs.c
+++ gv-3.5.8/src/options_fs.c
@@ -105,7 +105,6 @@
    Widget	w;
    XtPointer	client_data, call_data;
 {
-   BEGINMESSAGE(options_fs_cb_apply)
    Arg args[5];
    Cardinal n;
    static Boolean s_scratch_dir = False;
